{"version":3,"sources":["components/Searchbar.js","components/MovieDetails.js","components/MovieList.js","components/PaginationCo.js","components/ChosenMovie.js","App.js","serviceWorker.js","index.js"],"names":["Searchbar","props","className","Container","Navbar","bg","variant","Brand","href","Form","inline","onSubmit","handleDetails","FormControl","type","placeholder","onChange","handleChange","MovieDetails","onClick","viewMovieDetails","movieId","image","src","alt","title","class","value","voteAverage","maxValue","text","MovieList","CardGroup","this","content","map","movie","index","key","poster_path","id","overview","vote_average","React","Component","PaginationCo","pageLink","i","push","Pagination","Item","active","currentPage","nextPage","nextPageMain","Prev","Next","ChosenMovie","toggle","state","open","setState","currentID","dell","hide","updatereview","console","log","updates","name","review","firebase","ref","child","update","db","on","snapshot","removereview","remove","reviews","filter","hndClick","isFave","createreviews","bind","listenForChange","val","evt","target","fave","crm","currentMovie","background","style","backgroundImage","closeMovieDetails","color","revie","onRequestClose","controlId","display","margin","onChangeHandler","Button","outline","App","pageNumber","axios","method","url","apiKey","userseach","then","response","data","total_pages","results","currentPageSearch","catch","err","e","preventDefault","moviurl","totalPages","topRatedMovi","movieDetail","filterdMovie","length","process","st","pages","totalMainPages","totalSearchPages","topRatedMoviUrl","Boolean","window","location","hostname","match","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d584525b.chunk.js","sourcesContent":["import React from 'react'\nimport './search.css'\nimport {\n  Form,\n  Container, Navbar, FormControl\n} from 'react-bootstrap';\n////this component take the handleDetails and handleChange function \n// from the app component to handle user input and display the  Search result\nconst Searchbar = (props) => {\n  return (\n    <div className=\"co\">\n      <Container>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Movi List </Navbar.Brand>\n          <Form inline onSubmit={props.handleDetails}>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={props.handleChange} />\n          </Form>\n        </Navbar>\n      </Container>\n    </div>\n\n  )\n}\n\nexport default Searchbar;","import React from 'react';\nimport './moviedetail.css';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n//this component take the movie information from the MovieList component\n//and handle display  in the page\nexport default function MovieDetails(props) {\n    return (\n\n        <div className=\"card__collection clear-fix\" onClick={() => { props.viewMovieDetails(props.movieId) }}>\n            <div className=\"cards cards--three\">\n                {\n                    props.image == null ? <img className=\"img-responsive\" variant=\"top\" src={`https://p.kindpng.com/picc/s/62-629944_frame-decorative-movie-cinema-empty-frame-film-bingkai.png`} alt=\"Movie Image\" /> : <img className=\"img-responsive\" variant=\"top\" src={`https://image.tmdb.org/t/p/w780/${props.image}`} alt=\"Movie Image\" />\n                }\n                <span className=\"cards--three__rect-1\">\n                    <span className=\"shadow-1\"></span>\n                    <p>{props.title}</p>\n                </span>\n                <span className=\"cards--three__rect-2\">\n                    <span className=\"shadow-2\"></span>\n                </span>\n                <span className=\"cards--three__circle\"></span>\n                <ul className=\"cards--three__list\">\n                    <li class=\"w3-xxxlarge\"><CircularProgressbar value={props.voteAverage} maxValue={10} text={`${props.voteAverage === 0 ? 'NR' : props.voteAverage * 10}%`} /> </li>\n                </ul>\n\n\n            </div>\n        </div>\n\n\n\n    )\n}\n","import React from 'react'\nimport './Movielist.css'\nimport MovieDetails from './MovieDetails'\nimport {\n    CardGroup\n} from 'react-bootstrap';\n//this component take the movie info from the app component\n//and map over the info in pass this info to MovieDetails component\nexport default class MovieList extends React.Component {\n    render() {\n        return (\n            <CardGroup className=\"cardg\">\n                {\n                    this.props.content.map((movie, index) => {\n                        return (\n                            <MovieDetails key={index} image={movie.poster_path} alt=\"Card image cap\"\n                                movieId={movie.id}\n                                title={movie.title}\n                                overview={movie.overview}\n                                voteAverage={movie.vote_average}\n                                viewMovieDetails={this.props.viewMovieDetails}\n                            />\n                        )\n                    })\n                }\n            </CardGroup>\n        )\n    }\n}","import React from 'react'\nimport './paco.css'\nimport { Pagination } from 'react-bootstrap';\n//this component take the pge count from the app component\n// and display the Pagination bar with limit of 10 pages\nexport default function PaginationCo(props) {\n    const pageLink = []\n    for (let i = 1; i <= 10; i++) {\n        pageLink.push(<Pagination.Item className=\"pagination\" active={props.currentPage === i ? 'active' : ''} key={i} onClick={() => props.nextPage(i) || props.nextPageMain(i)}>{i}</Pagination.Item>)\n    }\n    return (\n        <div>\n            <Pagination className=\"pg\">\n                {props.currentPage > 1 ? <Pagination.Prev onClick={() => props.nextPage(props.currentPage - 1) || props.nextPageMain(props.currentPage - 1)}> {`<`} </Pagination.Prev> : ''}\n                {pageLink}\n                {props.currentPage >= 1 ? <Pagination.Next onClick={() => props.nextPage(props.currentPage + 1) || props.nextPageMain(props.currentPage + 1)}> {`>`}</Pagination.Next> : ''}\n            </Pagination>\n        </div>\n    )\n}\n\n","import React from 'react'\nimport './chosenMovie.css';\nimport * as firebase from 'firebase';\nimport 'firebase/database';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport Drawer from 'react-drag-drawer'\nimport { Form, Button } from 'reactstrap';\nexport default class ChosenMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      toggle: false,\n      hide: true,\n      reviews: [],\n      name: \"\",\n      review: \"\",\n      isFave: false,\n      currentID: '',\n    }\n    this.createreviews = this.createreviews.bind(this);\n  }\n\n  componentDidMount() {\n    this.db = firebase.database();\n    this.listenForChange();\n  }\n// this function responsible for  connection with the database \n  listenForChange() {\n    this.db.ref('reviews').on('child_added', snapshot => {\n      let review = {\n        id: snapshot.key,\n        name: snapshot.val().name,\n        review: snapshot.val().review,\n      }\n  let reviews = this.state.reviews;\n      reviews.push(review);\n\n      this.setState({\n        reviews: reviews\n      });\n    });\n  }\n// this function responsible for handle user input \n  onChangeHandler(evt, key) {\n    this.setState({\n      [key]: evt.target.value\n    });\n  }\n// this function responsible for push user input to the database\n  createreviews() {\n\n    firebase.database().ref('reviews').push({\n      name: this.state.name,\n      review: this.state.review\n    })\n  }\n\n// this function responsible for view the input for user review and track the id of the review\n  toggle = (id) => {\n    let { toggle } = this.state\n    let { open } = this.state\n    this.setState({ toggle: !toggle, open: !open, currentID: id })\n  }\n// this function responsible to hide all reviews\n  dell = () => {\n\n    let { hide } = this.state\n    this.setState({ hide: !hide })\n  }\n// this function responsible for update the review\n  updatereview = (id) => {\n    console.log(id)\n    var updates = {};\n    updates['/name'] = this.state.name;\n    updates['/review'] = this.state.review;\n    firebase.database().ref('reviews').child(id).update(updates);\n    this.db.ref('reviews').on('child_changed', snapshot => {\n      console.log(snapshot)\n\n    });\n  }\n// this function responsible for remove the review\n  removereview = (id) => {\n    firebase.database().ref('reviews').child(id).remove();\n    this.db.ref('reviews').on('child_removed', snapshot => {\n      let reviews = this.state.reviews;\n      reviews = reviews.filter(review => review.id !== snapshot.key);\n      this.setState({\n        reviews: reviews\n      });\n    }\n    );\n  };\n// this function responsible for add movie to favorit\n  hndClick = () => {\n    let { isFave } = this.state\n    this.setState({ isFave: !isFave })\n  }\n\n  render() {\n    const fave = this.state.isFave;\n    const { open } = this.state\n    const crm = this.props.currentMovie\n    const background = `https://image.tmdb.org/t/p/w780/${crm.poster_path}`\n    return (\n\n      <div>\n\n        <div class=\"movie_card\" id=\"bright\" style={{ backgroundImage: `url(${background})` }} >\n          <div class=\"info_section\">\n            <div class=\"movie_header\">\n\n              {\n                crm.poster_path == null ? <img className=\"locandina\" alt=\"...\" src={`https://p.kindpng.com/picc/s/62-629944_frame-decorative-movie-cinema-empty-frame-film-bingkai.png`} alt=\"Movie Image\" /> : <img className=\"locandina\" alt=\"...\" src={`https://image.tmdb.org/t/p/w780/${crm.poster_path}`} alt=\"Movie Image\" />\n              }  <h1>{crm.title}</h1>\n              <h4></h4>\n              <span class=\"minutes\"><div className=\"cl\"><CircularProgressbar value={crm.vote_average} maxValue={10} text={`${crm.vote_average === 0 ? 'NR' : crm.vote_average * 10}%`} /></div></span>\n              <p class=\"type\"></p>\n            </div>\n            <div class=\"movie_desc\">\n              <p class=\"text\">\n                {crm.overview}\n              </p>\n            </div>\n            <div class=\"movie_social\">\n              <ul>\n                <li><i className=\"material-icons\" onClick={this.props.closeMovieDetails}>arrow_back</i></li>\n                <li><i className=\"material-icons\" onClick={this.hndClick} style={fave ? { color: 'red' } : { color: '' }} ></i></li>\n                <li><i className=\"material-icons\" onClick={this.toggle}>chat_bubble</i></li>\n                <li><i className=\"material-icons\" onClick={this.dell}>delete</i></li>\n              </ul>\n            </div>\n          </div>\n          <div class=\"blur_back bright_back\"></div>\n        </div>\n        {this.state.hide === true ? this.state.reviews.map(revie => (\n          <div class=\"movie_card\" id=\"tomb\" key={revie.id} style={{\n            backgroundImage: `url(${background})`\n          }} >\n            <div class=\"info_section\">\n              <div class=\"movie_header\">\n                {\n                  crm.poster_path == null ? <img className=\"locandina\" alt=\"...\" src={`https://p.kindpng.com/picc/s/62-629944_frame-decorative-movie-cinema-empty-frame-film-bingkai.png`} alt=\"Movie Image\" /> : <img className=\"locandina\" alt=\"...\" src={`https://image.tmdb.org/t/p/w780/${crm.poster_path}`} alt=\"Movie Image\" />\n                }\n                <h1>{revie.name}</h1>\n\n                <h4></h4>\n                <span class=\"minutes\"></span>\n                <p class=\"type\"></p>\n              </div>\n              <div class=\"movie_desc\">\n                <p class=\"text\">\n                  {revie.review}     </p>\n              </div>\n              <div class=\"movie_social\">\n                <ul>\n                  <li><i class=\"material-icons\" onClick={() => this.removereview(revie.id)}>delete</i></li>\n                  <li><i class=\"material-icons\" onClick={() => this.toggle(revie.id)}>edit</i></li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"blur_back tomb_back\"></div>\n\n          </div>\n\n        )) : ''\n        }\n        <Drawer\n          open={open}\n          onRequestClose={this.toggle}>\n          <div>           \n             <Form controlId=\"formBasicEmail\" onSubmit={this.createreviews}>\n              <input\n              style={{display: \"block\" , margin: \"10px 0\"}}\n              type=\"text\"\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={(evt) => this.onChangeHandler(evt, 'name')}\n                value={this.state.name}\n              />    \n              <input\n                style={{display: \"block\"}}\n                type=\"textarea\"\n                name=\"review\"\n                placeholder=\"review\"\n                onChange={(evt) => this.onChangeHandler(evt, 'review')}\n                value={this.state.review}\n              />\n              <Button               style={{margin: \"10px 19px 10px 0\"}}\n outline color=\"secondary\" onClick={this.createreviews}>Submit</Button>\n              <Button outline color=\"secondary\" onClick={() => this.updatereview(this.state.currentID)}>update</Button>\n            </Form>\n          </div>\n        </Drawer>\n      </div>\n\n\n    )\n  }\n}\n\n","import React from 'react';\nimport Searchbar from './components/Searchbar';\nimport MovieList from './components/MovieList';\nimport PaginationCo from './components/PaginationCo';\nimport ChosenMovie from './components/ChosenMovie';\n\nimport axios from \"axios\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      content: [],\n     // miancontent: content,\n      userseach: '',\n      totalPages: 0,\n      currentPage: 1,\n      currentMovie: null,\n\n\n    };\n    this.apiKey = process.env.REACT_APP_API\n  }\n  nextPage = (pageNumber) => {\n\n    axios({\n      method: 'GET',\n      url: `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.userseach}&page=${pageNumber}`\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`tootalPage is ${response.data.total_pages}`);\n        this.setState({ content: [...response.data.results], currentPageSearch: pageNumber })\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleDetails = (e) => {\n    e.preventDefault();\n    const moviurl = `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.userseach}`\n    axios({\n      method: 'GET',\n      url: moviurl\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`Fetching details for ${response.data.results}`);\n        console.log(response.data)\n        this.setState({ content: [...response.data.results], totalPages: response.data.total_pages })\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  handleChange = (e) => {\n    this.setState({ userseach: e.target.value })\n  }\n\n  nextPageMain = (pageNumber) => {\n\n    const topRatedMovi = `https://api.themoviedb.org/3/movie/top_rated?api_key=${this.apiKey}&language=en-US&page=${pageNumber}`\n    axios({\n      method: 'GET',\n      url: topRatedMovi\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`Fetching details for ${response.data.results}`);\n        console.log(response.data)\n        this.setState({ content: [...response.data.results], currentPage: pageNumber })\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ userseach: e.target.value })\n  }\n  viewMovieDetails = (id) => {\n    const movieDetail = this.state.content.filter(movie => movie.id === id);\n    const filterdMovie = movieDetail.length > 0 ? movieDetail[0] : null;\n\n    this.setState({ currentMovie: filterdMovie })\n  }\n  closeMovieDetails = () => {\n    this.setState({ currentMovie: null })\n  }\n\n\n  render() {\n    const st = this.state;\n    return (\n\n      <div className=\"film-library\">    \n        {st.currentMovie == null ? <div><Searchbar handleDetails={this.handleDetails} handleChange={this.handleChange}/>\n        <MovieList content={st.content} viewMovieDetails={this.viewMovieDetails} />\n         </div> : \n                  <ChosenMovie currentMovie={st.currentMovie} closeMovieDetails={this.closeMovieDetails}/>}\n        {st.totalPages >= 2 && st.currentMovie == null ? <PaginationCo currentPageSearch={st.currentPageSearch} pages={st.totalPages} totalMainPages={st.totalMainPages} totalSearchPages={st.totalSearchPages} nextPageMain={this.nextPageMain} nextPage={this.nextPage} currentPage={st.currentPage} /> : ''}\n\n      </div>\n    );\n  }\n  componentDidMount() {\n    const topRatedMoviUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${this.apiKey}&language=en-US`\n    axios({\n      method: 'GET',\n      url: topRatedMoviUrl\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`Fetching details for ${response.data.results}`);\n        console.log(response.data)\n        this.setState({ content: [...response.data.results], totalPages: response.data.total_pages })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n   \n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\n\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n  };\n  \n  firebase.initializeApp(config);\n  \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}