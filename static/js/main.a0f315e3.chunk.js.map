{"version":3,"sources":["components/Searchbar.js","components/ChosenMovie.js","components/MovieDetails.js","components/MovieList.js","components/PaginationCo.js","App.js","serviceWorker.js","index.js"],"names":["Searchbar","props","className","Container","Navbar","bg","variant","Brand","href","Nav","Link","Form","inline","onSubmit","handleDetails","FormControl","type","placeholder","onChange","handleChange","Button","ChosenMovie","toggle","id","state","open","setState","currentID","logState","console","log","updatereview","updates","name","review","firebase","ref","child","update","db","on","snapshot","removeAllreview","collection","doc","delete","deleteDocument","then","res","removereview","remove","reviews","filter","key","hndClick","isFave","checked","handleCheckboxChange","event","target","createreviews","bind","this","listenForChange","val","push","evt","value","fave","background","currentMovie","poster_path","class","style","backgroundImage","alt","src","title","overview","onClick","closeMovieDetails","removeAll","color","map","revie","onRequestClose","onChangeHandler","for","outline","React","Component","MovieDetails","viewMovieDetails","movieId","image","voteAverage","maxValue","text","MovieList","CardGroup","content","movie","index","vote_average","PaginationCo","pageLink","i","Pagination","Item","active","currentPage","nextPage","nextPageMain","Prev","Next","App","pageNumber","axios","method","url","apiKey","userseach","response","data","total_pages","results","currentPageSearch","catch","err","e","preventDefault","moviurl","totalPages","topRatedMovi","movieDetail","filterdMovie","length","process","st","pages","totalMainPages","totalSearchPages","topRatedMoviUrl","Boolean","window","location","hostname","match","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a0f315e3.chunk.js","sourcesContent":["import React from 'react'\nimport './search.css'\nimport {\n    Form, \n    Container,Navbar,Nav,Button,FormControl\n} from 'react-bootstrap';\n\nconst Searchbar = (props) => {\n    return (\n        <div className=\"co\">\n            <Container>\n            <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\">Login</Nav.Link>\n      <Nav.Link href=\"#features\">Re</Nav.Link>\n      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n    </Nav>\n    <Form inline onSubmit={props.handleDetails}>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={props.handleChange} />\n      <Button variant=\"outline-info\">Search</Button>\n    </Form>\n  </Navbar>\n            </Container>\n        </div>\n\n    )\n}\n\nexport default Searchbar;","import React from 'react'\nimport './chosenMovie.css';\nimport * as firebase from 'firebase';\nimport 'firebase/database';\nimport Drawer from 'react-drag-drawer'\nimport { Form, Button } from 'reactstrap';\nexport default class ChosenMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      toggle: false,\n      reviews: [],\n      name: \"\",\n      review: \"\",\n      isFave: false,\n      currentID:'',\n      checked: false \n    }\n\n    this.createreviews = this.createreviews.bind(this);\n  }\n  componentDidMount() {\n    this.db = firebase.database();\n\n    this.listenForChange();\n  }\n\n  listenForChange() {\n    this.db.ref('reviews').on('child_added', snapshot => {\n      let review = {\n        id: snapshot.key,\n        name: snapshot.val().name,\n        review: snapshot.val().review,\n        isFave: snapshot.val().isFave,\n      }\n\n      let reviews = this.state.reviews;\n      reviews.push(review);\n\n      this.setState({\n        reviews: reviews\n      });\n    });\n\n  }\n  onChangeHandler(evt, key) {\n    this.setState({\n      [key]: evt.target.value\n    });\n  }\n\n  createreviews() {\n\n    firebase.database().ref('reviews').push({\n      name: this.state.name,\n      review: this.state.review\n    })\n  }\n\n\n  toggle = (id) => {\n    let { toggle } = this.state\n    let { open } = this.state\n    this.setState({ toggle: !toggle, open: !open,currentID:id })\n  }\n\n  logState = () => {\n    console.log(`Drawer now ${this.state.open ? 'open' : 'closed'}`)\n  }\n\n\n  updatereview = (id) => {\n    console.log(id)\n    var updates = {};\n    updates['/name'] = this.state.name;\n    updates['/review'] = this.state.review;\n    firebase.database().ref('reviews').child(id).update(updates);\n    this.db.ref('reviews').on('child_changed', snapshot => {\n      console.log(snapshot)\n\n    });\n  }\n\n  removeAllreview = () => {\n let deleteDoc = firebase.database().db.collection('reviews').doc('DC').delete();\n}\n    \n deleteDocument = (db) => {\n  let deleteDoc = this.db.collection('reviews').doc('DC').delete();\n  \n\n  return deleteDoc.then(res => {\n    console.log('Delete: ', res);\n  });\n}\n\n  removereview = (id) => {\n    firebase.database().ref('reviews').child(id).remove();\n    this.db.ref('reviews').on('child_removed', snapshot => {\n      let reviews = this.state.reviews;\n      reviews = reviews.filter(review => review.id !== snapshot.key);\n      this.setState({\n        reviews: reviews\n      });\n    });\n  };\n  hndClick = () => {\n    let { isFave } = this.state\n    this.setState({ isFave: !isFave })\n  }\n  checked = ()=>{\n  if(this.checked != true)\n  {\n    console.log(this.state.currentID)  }\n} \nhandleCheckboxChange = event =>{\nthis.setState({ checked: event.target.checked })\n}\n  render() {\n    const fave = this.state.isFave;\n    const { open } = this.state\n\n    const background = `https://image.tmdb.org/t/p/w780/${this.props.currentMovie.poster_path}`\n    return (\n\n\n      <div>\n\n        <div class=\"movie_card\" id=\"bright\" style={{ backgroundImage: `url(${background})` }} >\n          <div class=\"info_section\">\n            <div class=\"movie_header\">\n\n              {\n                this.props.currentMovie.poster_path == null ? <img className=\"locandina\" alt=\"...\" src={`https://p.kindpng.com/picc/s/62-629944_frame-decorative-movie-cinema-empty-frame-film-bingkai.png`} alt=\"Movie Image\" /> : <img className=\"locandina\" alt=\"...\" src={`https://image.tmdb.org/t/p/w780/${this.props.currentMovie.poster_path}`} alt=\"Movie Image\" />\n              }  <h1>{this.props.currentMovie.title}</h1>\n              <h4></h4>\n              <span class=\"minutes\"></span>\n              <p class=\"type\"></p>\n            </div>\n            <div class=\"movie_desc\">\n              <p class=\"text\">\n                {this.props.currentMovie.overview}\n              </p>\n            </div>\n            <div class=\"movie_social\">\n              <ul>\n                <li><i className=\"material-icons\" onClick={this.props.closeMovieDetails}>arrow_back</i></li>\n                <li><i class=\"material-icons\" onClick={this.removeAll}>share</i></li>\n                <li><i className=\"material-icons\" onClick={this.hndClick} style={fave ? { color: 'red' } : { color: '' }} ></i></li>\n                <li><i className=\"material-icons\" onClick={this.toggle}>chat_bubble</i></li>\n                <li><i className=\"material-icons\">delete</i></li>\n              </ul>\n            </div>\n          </div>\n          <div class=\"blur_back bright_back\"></div>\n        </div>\n        {this.state.reviews.map(revie => (\n          <div class=\"movie_card\" id=\"tomb\" key={revie.id} style={{\n            backgroundImage: `url(${background})`\n          }} >\n            <div class=\"info_section\">\n              <div class=\"movie_header\">\n                {\n                  this.props.currentMovie.poster_path == null ? <img className=\"locandina\" alt=\"...\" src={`https://p.kindpng.com/picc/s/62-629944_frame-decorative-movie-cinema-empty-frame-film-bingkai.png`} alt=\"Movie Image\" /> : <img className=\"locandina\" alt=\"...\" src={`https://image.tmdb.org/t/p/w780/${this.props.currentMovie.poster_path}`} alt=\"Movie Image\" />\n                }\n                <h1>{revie.name}</h1>\n\n                <h4></h4>\n                <span class=\"minutes\"><input type=\"checkbox\"  checked={this.state.checked} onChange={this.handleCheckboxChange} ></input></span>\n                <p class=\"type\"></p>\n              </div>\n              <div class=\"movie_desc\">\n                <p class=\"text\">\n                  {revie.review}     </p>\n              </div>\n              <div class=\"movie_social\">\n                <ul>\n                  <li><i class=\"material-icons\" >share</i></li>\n                  <li><i class=\"material-icons\" onClick={() => this.removereview(revie.id)}></i></li>\n                  <li><i class=\"material-icons\" onClick={()=>this.toggle(revie.id)}>chat_bubble</i></li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"blur_back tomb_back\"></div>\n           \n          </div>\n\n        ))\n        }\n <Drawer\n              open={open}\n              onRequestClose={this.toggle}>\n              <div>\n                <Form onSubmit={this.createreviews}>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    onChange={(evt) => this.onChangeHandler(evt, 'name')}\n                    value={this.state.name}\n                  />\n                  <label for=\"vehicle3\"> I Like this movie</label>\n                  <input type=\"checkbox\"\n                    onClick={(evt) => this.onChangeHandler(evt, 'isFave')}\n                    value={this.state.isFave}\n                    id=\"vehicle3\" name=\"vehicle3\" value=\"Boat\" />\n                  <input\n                    type=\"textarea\"\n                    name=\"review\"\n                    placeholder=\"review\"\n                    onChange={(evt) => this.onChangeHandler(evt, 'review')}\n                    value={this.state.review}\n                  />\n\n                  <Button outline color=\"secondary\" onClick={this.createreviews}>Submit</Button>\n                  <Button outline color=\"secondary\" onClick={() => this.updatereview(this.state.currentID)}>update</Button>\n\n                </Form>\n              </div>\n            </Drawer>\n\n      </div>\n\n\n    )\n  }\n}\n\n","import React from 'react';\nimport './moviedetail.css';\nimport ChosenMovie from './ChosenMovie';\n\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport {\n    Card\n} from 'react-bootstrap';\n\nexport default function MovieDetails(props) {\n    return (\n\n\n        <div className=\"card__collection clear-fix\" onClick={() => { props.viewMovieDetails(props.movieId) }}>\n            <div class=\"cards cards--three\">\n                {\n                    props.image == null ? <img class=\"img-responsive\" variant=\"top\" src={`https://p.kindpng.com/picc/s/62-629944_frame-decorative-movie-cinema-empty-frame-film-bingkai.png`} alt=\"Movie Image\" /> : <img class=\"img-responsive\" variant=\"top\" src={`https://image.tmdb.org/t/p/w780/${props.image}`} alt=\"Movie Image\" />\n                }\n                <span class=\"cards--three__rect-1\">\n                    <span class=\"shadow-1\"></span>\n                    <p>{props.title}</p>\n                </span>\n                <span className=\"cards--three__rect-2\">\n                    <span className=\"shadow-2\"></span>\n                </span>\n                <span className=\"cards--three__circle\"></span>\n                <ul className=\"cards--three__list\">\n          <li>  <i> <CircularProgressbar value={props.voteAverage} maxValue={10} text={`${props.voteAverage === 0 ? 'NR' : props.voteAverage * 10}%`} /></i></li>\n                </ul>\n\n\n            </div>\n        </div>\n\n\n\n    )\n}\n","import React from 'react'\nimport './Movielist.css'\nimport MovieDetails from './MovieDetails'\nimport {\n   CardGroup\n\n} from 'react-bootstrap';\n\nexport default class MovieList extends React.Component {\n\n  \n     \n\n    render() {\n\n    return (\n\n   \n        <CardGroup className=\"cardg\">\n\n            {\n                this.props.content.map((movie, index) => {\n                    return (\n                        <MovieDetails key={index} image={movie.poster_path} alt=\"Card image cap\" \n                        movieId = {movie.id}\n                        title={movie.title}\n                        overview={movie.overview}\n                        voteAverage={movie.vote_average}\n                        viewMovieDetails = {this.props.viewMovieDetails}\n                        />\n\n                    )\n                })\n            }\n</CardGroup>\n\n\n\n\n\n\n    )\n}}\n\n","import React from 'react'\nimport './paco.css'\nimport { Pagination } from 'react-bootstrap';\nexport default function PaginationCo(props) {\n    const pageLink =[]\n    \n   for (let i = 1; i <= 10 ; i++){     \n     pageLink.push(<Pagination.Item active = {props.currentPage === i ? 'active' : ''} key={i} onClick={()=> props.nextPage(i) || props.nextPageMain(i)}>{i}</Pagination.Item>) \n}\n    \n    return (\n        <div>\n           <Pagination>\n               {props.currentPage > 1 ? <Pagination.Prev onClick={()=> props.nextPage(props.currentPage -1) || props.nextPageMain(props.currentPage -1)}> {`<`} </Pagination.Prev> :''}\n               {pageLink}\n               {props.currentPage >= 1 ? <Pagination.Next onClick={()=> props.nextPage(props.currentPage +1) || props.nextPageMain(props.currentPage +1)}> {`>`}</Pagination.Next> :''}\n            </Pagination> \n        </div>\n    )\n}\n\n","import React from 'react';\nimport Searchbar from './components/Searchbar';\nimport MovieList from './components/MovieList';\nimport PaginationCo from './components/PaginationCo';\nimport ChosenMovie from './components/ChosenMovie';\n\nimport axios from \"axios\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      content: [],\n     // miancontent: content,\n      userseach: '',\n      totalPages: 0,\n      currentPage: 1,\n      currentMovie: null,\n\n\n    };\n    this.apiKey = process.env.REACT_APP_API\n  }\n  nextPage = (pageNumber) => {\n\n    axios({\n      method: 'GET',\n      url: `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.userseach}&page=${pageNumber}`\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`tootalPage is ${response.data.total_pages}`);\n        this.setState({ content: [...response.data.results], currentPageSearch: pageNumber })\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleDetails = (e) => {\n    e.preventDefault();\n    const moviurl = `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${this.state.userseach}`\n    axios({\n      method: 'GET',\n      url: moviurl\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`Fetching details for ${response.data.results}`);\n        console.log(response.data)\n        this.setState({ content: [...response.data.results], totalPages: response.data.total_pages })\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  handleChange = (e) => {\n    this.setState({ userseach: e.target.value })\n  }\n\n  nextPageMain = (pageNumber) => {\n\n    const topRatedMovi = `https://api.themoviedb.org/3/movie/top_rated?api_key=${this.apiKey}&language=en-US&page=${pageNumber}`\n    axios({\n      method: 'GET',\n      url: topRatedMovi\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`Fetching details for ${response.data.results}`);\n        console.log(response.data)\n        this.setState({ content: [...response.data.results], currentPage: pageNumber })\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ userseach: e.target.value })\n  }\n  viewMovieDetails = (id) => {\n    const movieDetail = this.state.content.filter(movie => movie.id === id);\n    const filterdMovie = movieDetail.length > 0 ? movieDetail[0] : null;\n\n    this.setState({ currentMovie: filterdMovie })\n  }\n  closeMovieDetails = () => {\n    this.setState({ currentMovie: null })\n  }\n\n\n  render() {\n    const st = this.state;\n    return (\n\n      <div className=\"film-library\">\n      \n        \n        {st.currentMovie == null ? <div><Searchbar handleDetails={this.handleDetails} handleChange={this.handleChange}/>\n        <MovieList content={st.content} viewMovieDetails={this.viewMovieDetails} />\n         </div> : \n                  <ChosenMovie currentMovie={st.currentMovie} closeMovieDetails={this.closeMovieDetails}/>}\n        {st.totalPages >= 2 && st.currentMovie == null ? <PaginationCo currentPageSearch={st.currentPageSearch} pages={st.totalPages} totalMainPages={st.totalMainPages} totalSearchPages={st.totalSearchPages} nextPageMain={this.nextPageMain} nextPage={this.nextPage} currentPage={st.currentPage} /> : ''}\n\n      </div>\n    );\n  }\n  componentDidMount() {\n    const topRatedMoviUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${this.apiKey}&language=en-US`\n    axios({\n      method: 'GET',\n      url: topRatedMoviUrl\n    })\n      .then(response => {\n        console.log(response)\n        console.log(`Fetching details for ${response.data.results}`);\n        console.log(response.data)\n        this.setState({ content: [...response.data.results], totalPages: response.data.total_pages })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n   \n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\n\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n  };\n  \n  firebase.initializeApp(config);\n  \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}